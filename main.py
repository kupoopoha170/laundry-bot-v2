# ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏Å‡∏∏‡∏ç‡πÅ‡∏à‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
import os
import time
import threading
import tinytuya
from flask import Flask, request, abort
from line_bot_sdk import LineBotApi, WebhookHandler
from line_bot_sdk.exceptions import InvalidSignatureError
from line_bot_sdk.models import MessageEvent, TextMessage, TextSendMessage

# --- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏î‡πâ) ---
# ‡∏Ñ‡πà‡∏≤‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô (‡∏ß‡∏±‡∏ï‡∏ï‡πå) ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤ "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"
POWER_THRESHOLD_ON = 20  # WATT
# ‡∏Ñ‡πà‡∏≤‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô (‡∏ß‡∏±‡∏ï‡∏ï‡πå) ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤ "‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"
POWER_THRESHOLD_OFF = 10  # WATT
# ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏£‡∏¥‡∏á‡πÜ (‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏¢‡∏∏‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏≠‡∏ö)
DELAY_BEFORE_NOTIFY = 180 # 180 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ = 3 ‡∏ô‡∏≤‡∏ó‡∏µ
# ----------------------------------------------------

# ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
# ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏∏‡∏ç‡πÅ‡∏à‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏à‡∏≤‡∏Å Secrets ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ
line_bot_api = LineBotApi(os.environ['LINE_CHANNEL_ACCESS_TOKEN'])
handler = WebhookHandler(os.environ['LINE_CHANNEL_SECRET'])
device_id = os.environ['TUYA_DEVICE_ID']
local_key = os.environ['TUYA_LOCAL_KEY']

# ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 4: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
user_id_to_notify = None
is_washing = False
last_power_drop_time = None
notification_sent = False

# ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 5: ‡∏™‡∏£‡πâ‡∏≤‡∏á Web Server ‡∏î‡πâ‡∏ß‡∏¢ Flask
app = Flask(__name__)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ LINE ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏≤‡∏´‡∏≤‡πÄ‡∏£‡∏≤
@app.route("/callback", methods=['POST'])
def callback():
    signature = request.headers['X-Line-Signature']
    body = request.get_data(as_text=True)
    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        abort(400)
    return 'OK'

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    global user_id_to_notify, is_washing, notification_sent
    if event.message.text == '1':
        user_id_to_notify = event.source.user_id
        is_washing = False # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠
        notification_sent = False
        reply_message = '‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡∏Ñ‡πà‡∏∞! ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡∏£‡∏µ‡∏ö‡∏°‡∏≤‡πÅ‡∏à‡πâ‡∏á‡∏ô‡∏∞‡∏Ñ‡∏∞ üß∫'
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=reply_message))
        print(f"‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏à‡∏≤‡∏Å User ID: {user_id_to_notify}")

# ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 6: ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤
def monitor_laundry():
    global user_id_to_notify, is_washing, last_power_drop_time, notification_sent

    print("‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤...")
    # ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏õ‡∏•‡∏±‡πä‡∏Å Tuya
    d = tinytuya.OutletDevice(device_id, '1.1.1.1', local_key) # ‡πÉ‡∏™‡πà IP ‡∏°‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô, library ‡∏à‡∏∞‡∏´‡∏≤‡πÄ‡∏≠‡∏á
    d.set_version(3.3)

    while True:
        # ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô ‡∏Å‡πá‡πÉ‡∏´‡πâ‡∏£‡∏≠
        if not user_id_to_notify:
            time.sleep(5)
            continue
        
        try:
            # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏≤‡∏Å‡∏õ‡∏•‡∏±‡πä‡∏Å (‡∏£‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô)
            data = d.status()
            current_power = data['dps']['19'] # DP '19' ‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡πà‡∏≤‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô (‡∏ß‡∏±‡∏ï‡∏ï‡πå)
            print(f"‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡∏±‡∏Å={is_washing}, ‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü={current_power}W, ‡∏£‡∏≠‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô={not notification_sent}")

            # ‡∏ï‡∏£‡∏£‡∏Å‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
            # 1. ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü‡∏™‡∏π‡∏á‡∏Ç‡∏∂‡πâ‡∏ô -> ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡∏±‡∏Å"
            if not is_washing and current_power > POWER_THRESHOLD_ON:
                is_washing = True
                notification_sent = False # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á
                print("‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô -> ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡∏±‡∏Å")

            # 2. ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡∏±‡∏Å ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü‡∏•‡∏î‡∏•‡∏á -> ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏ô‡πà‡∏ß‡∏á
            elif is_washing and current_power < POWER_THRESHOLD_OFF:
                if last_power_drop_time is None:
                    last_power_drop_time = time.time()
                    print(f"‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü‡∏•‡∏î‡∏•‡∏á ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏ô‡πà‡∏ß‡∏á {DELAY_BEFORE_NOTIFY} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ...")
                
                # 3. ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏ô‡πà‡∏ß‡∏á‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
                if (time.time() - last_power_drop_time) > DELAY_BEFORE_NOTIFY:
                    if not notification_sent:
                        print("‡∏ã‡∏±‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á LINE...")
                        line_bot_api.push_message(user_id_to_notify, TextSendMessage(text='‚úÖ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞!'))
                        notification_sent = True
                        user_id_to_notify = None # ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏Ñ‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
                        is_washing = False
                        last_power_drop_time = None
            
            # 4. ‡∏ñ‡πâ‡∏≤‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏™‡∏π‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ -> ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏¢‡∏±‡∏á‡∏ã‡∏±‡∏Å‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à
            elif is_washing and current_power > POWER_THRESHOLD_ON:
                if last_power_drop_time is not None:
                    print("‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤")
                last_power_drop_time = None

        except Exception as e:
            print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏õ‡∏•‡∏±‡πä‡∏Å: {e}")
        
        # ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
        time.sleep(10) # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏∏‡∏Å 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ

# ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 7: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö
# ‡πÄ‡∏£‡∏¥‡πà‡∏° thread ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤ ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á
monitor_thread = threading.Thread(target=monitor_laundry)
monitor_thread.daemon = True
monitor_thread.start()

# ‡πÄ‡∏£‡∏¥‡πà‡∏° Web Server
if __name__ == "__main__":
    app.run(host='0.0.0.0', port=8080)
